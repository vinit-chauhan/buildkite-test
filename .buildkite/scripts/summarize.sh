#!/usr/bin/env bash
set -euo pipefail
mkdir -p work/summary
buildkite-agent artifact download "work/*/result.json" work/summary >/dev/null 2>&1 || true

jq -s '
  ( . // [] ) as $arr
  | {
      total: ($arr | length),
      passed: ($arr | map(select(.status=="passed")) | length),
      failed: ($arr | map(select(.status=="failed")) | length),
      not_found: ($arr | map(select(.status=="not_found")) | length),
      prs_created: ($arr | map(select(.pr_created==true)) | length),
      results: $arr
    }
' work/summary/*.json 2>/dev/null > work/summary/report.json || echo '{"total":0,"results":[]}' > work/summary/report.json

echo "Summary:"
jq -C . work/summary/report.json || cat work/summary/report.json

# Create detailed comment for GitHub issue
if [[ -n "${ISSUE_REPO:-}" && -n "${ISSUE_NUMBER:-}" && -n "${GITHUB_TOKEN:-}" ]]; then
  echo "--- Creating GitHub issue comment"
  
  # Generate summary statistics
  TOTAL=$(jq -r '.total' work/summary/report.json)
  PASSED=$(jq -r '.passed' work/summary/report.json)
  FAILED=$(jq -r '.failed' work/summary/report.json)
  NOT_FOUND=$(jq -r '.not_found' work/summary/report.json)
  PRS_CREATED=$(jq -r '.prs_created' work/summary/report.json)
  
  # Generate detailed results
  mapfile -t check_lines < <(jq -r '.results[] | "- **\(.integration)**: \(.status)" + (if .pr_created then " (PR created)" else "" end)' work/summary/report.json)
  
  # Generate PR links if any were created
  mapfile -t pr_lines < <(jq -r '.results[] | select(.pr_created == true) | "- [\(.integration)](\(.pr_url))"' work/summary/report.json)
  
  {
    echo "## 🔍 elastic-package check summary for Issue #${ISSUE_NUMBER}"
    echo ""
    echo "### 📊 Results Overview"
    echo "- **Total integrations:** ${TOTAL}"
    echo "- **Passed:** ${PASSED} ✅"
    echo "- **Failed:** ${FAILED} ❌"
    echo "- **Not found:** ${NOT_FOUND} ⚠️"
    echo "- **PRs created:** ${PRS_CREATED} 🔧"
    echo ""
    echo "### 📝 Detailed Results"
    printf "%s\n" "${check_lines[@]}"
    
    if [[ ${#pr_lines[@]} -gt 0 ]]; then
      echo ""
      echo "### 🔧 Pull Requests Created"
      printf "%s\n" "${pr_lines[@]}"
      echo ""
      echo "Please review and merge the PRs above to fix the identified issues."
    fi
    
    echo ""
    echo "---"
    echo "*This report was automatically generated by [Buildkite](${BUILDKITE_BUILD_URL:-})*"
    
  } > work/summary/comment.txt
  
  # Post comment to GitHub issue
  if command -v gh >/dev/null 2>&1; then
    gh issue comment "$ISSUE_NUMBER" -R "$ISSUE_REPO" -F work/summary/comment.txt || true
  else
    echo "GitHub CLI not available, skipping issue comment"
  fi
fi

buildkite-agent artifact upload "work/summary/report.json"

