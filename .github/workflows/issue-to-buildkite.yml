name: Issue to Buildkite Pipeline

on:
  issues:
    types: [opened, labeled, edited, reopened]

jobs:
  trigger-buildkite:
    if: contains(github.event.issue.labels.*.name, 'ai-doc-gen')
    runs-on: ubuntu-latest
    
    steps:
      - name: Extract YAML front-matter from issue
        id: extract-yaml
        run: |
          # Create a temporary file with the issue body
          cat << 'EOF' > issue_body.txt
          ${{ github.event.issue.body }}
          EOF
          
          # Extract YAML front-matter (between --- markers)
          awk 'BEGIN{found=0; yaml=""} 
               /^---[ \t]*$/ {
                 if(found==0) {found=1; next} 
                 else if(found==1) {found=2; exit}
               } 
               found==1 {yaml=yaml $0 "\n"} 
               END{print yaml}' issue_body.txt > extracted.yaml
          
          # Check if we have valid YAML
          if [ -s extracted.yaml ]; then
            echo "Found YAML front-matter:"
            cat extracted.yaml
            
            # Parse integrations using yq and ensure compact JSON
            if command -v yq >/dev/null 2>&1; then
              INTEGRATIONS=$(yq -o=json -I=0 '.integrations // []' extracted.yaml)
            else
              # Install yq
              sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
              sudo chmod +x /usr/local/bin/yq
              INTEGRATIONS=$(yq -o=json -I=0 '.integrations // []' extracted.yaml)
            fi
            
            # Ensure it's truly compact (remove any remaining whitespace)
            INTEGRATIONS=$(echo "$INTEGRATIONS" | jq -c '.')
            
            echo "Parsed integrations: $INTEGRATIONS"
            
            # Only proceed if we have integrations
            if [ "$INTEGRATIONS" != "[]" ] && [ "$INTEGRATIONS" != "null" ]; then
              echo "integrations-json=$INTEGRATIONS" >> $GITHUB_OUTPUT
              echo "has-integrations=true" >> $GITHUB_OUTPUT
            else
              echo "No integrations found in YAML"
              echo "has-integrations=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "No YAML front-matter found"
            echo "has-integrations=false" >> $GITHUB_OUTPUT
          fi

      - name: Trigger Buildkite Pipeline
        if: steps.extract-yaml.outputs.has-integrations == 'true'
        run: |
          # Use jq to construct the payload properly
          jq -n \
            --arg integrations_json '${{ steps.extract-yaml.outputs.integrations-json }}' \
            --arg issue_number '${{ github.event.issue.number }}' \
            --arg issue_url '${{ github.event.issue.html_url }}' \
            --arg issue_repo '${{ github.repository }}' \
            --arg github_token '${{ secrets.GITHUB_TOKEN }}' \
            --arg pr_token '${{ secrets.PR_TOKEN }}' \
            '{
              "commit": "HEAD",
              "branch": "main",
              "message": ("Check integrations from issue #" + $issue_number),
              "env": {
                "ISSUE_NUMBER": $issue_number,
                "ISSUE_URL": $issue_url,
                "ISSUE_REPO": $issue_repo,
                "INTEGRATIONS_JSON": $integrations_json,
                "GITHUB_TOKEN": $github_token,
                "GITHUB_PR_TOKEN": $pr_token
              }
            }' > payload.json
          
          echo "Payload being sent:"
          cat payload.json
          
          curl -X POST "https://api.buildkite.com/v2/organizations/${{ vars.BUILDKITE_ORG }}/pipelines/${{ vars.BUILDKITE_PIPELINE }}/builds" \
            -H "Authorization: Bearer ${{ secrets.BUILDKITE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @payload.json
